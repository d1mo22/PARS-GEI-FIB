Alta plat individual:
context: Sistema::AltaPlatIndividual(codi: String, nom: String, recepta: String): platIndividual 
pre:
post:
    PlatIndividual.allInstances()->exists(pi | pi.oclIsNew() and
                                               pi.codi = codi and
                                               pi.nom = nom and
                                               pi.recepta = recepta and
                                               pi.oclIsTypeof(PlatIndividual) and
                                               resultat = platIndividual)

context: Sistema::AltaIngredientsPlat(platIndividual: PlatIndividual, nom: String, quantitat: Decimal, unitatDeMesura: String)
pre:
post:
    Mesura.allInstances()->exists(m | m.oclIsNew() and
                                      m.ingredient.nom = nom and
                                      m.platIndividual = platIndividual and
                                      m.quantitat = quantitat and
                                      m.unitatDeMesura = unitatDeMesura)


Confeccio menu diari:

context: Sistema::AltaMenu(codiMenu: String, nomMenu: String, codiPlat: String)
pre: PlatIndividual.allInstances()->exists(p | p.codi = codiPlat)
post:
    if (not Menu.allInstances()@pre->exists(m | m.codi = codiMenu)) then
        Menu.allInstances()->exists(m | m.oclIsNew() and m.codi = codi and m.nom = nom and m.platIndividual.codi = codiPlat)
    endif
    Menu.allInstances()->exists(m | m.codi = codiMenu and m.platIndividual.codi = codiPlat)

context:Sistema::AltaMenuDiariOferta(codiMenu: String, nomRestaurant: String, data: Date, preu: Decimal)
pre: MenuDiariOfert.allInstances()->exists(md | md.restaurant.nom = nomRestaurant and md.menu.platIndividual->size() < 100)
post:
    MenuDiariOfert.allInstances()->exists(mdo | mdo.oclIsNew() and
                                                mdo.data.data = data and
                                                mdo.restaurant.nom = nomRestaurant and
                                                mdo.menu.codi = codiMenu and
                                                mdo.preu = preu)

Consulta plats oferts:

context: Sistema::ContultaPlatsOferta(nomRestaurant: String, dataInici: Date, dataFi: Date):
    Set(TupleType(codiPlat: String, nomIngredients: Set(String)))
pre: 
    MenuDiariOfert.allInstances()->select(md | md.restaurant.nom = nomRestaurant and
                                               md.data.data <= dataFi and md.data.data >= dataInici and
                                               md.preu < 10 and )->size() >= 10
body:
    result = MenuDiariOfert.allInstances()->select(md | md.restaurant.nom = nomRestaurant and
                                                        md.data.data >= dataInici and md.data.data <= dataFi)
                                          ->collect(mdp | Tuple{codiPlat = mdp.menu.platIndividual.codi, nomIngredients = mdp.menu.platIndividual.ingredient.nom->asSet()})